//Задача 30. 
/* Напишите программу, которая выводит массив из (number) элементов, заполненный
   в случайном порядке числами из заданног диапозона.*/

/* Создаем массив (он сейчас на 62 строке) и сверху пишем методы. */
// Метод 1
void FillArray(int[] collection) /*void-оператор, который ни чего не возвращает и значит, 
                                   что с ним не нужно использовать оператор return, который делает возврат.
                                   FillArray (перевод-заполняющий массив)- наименование метода .
                                   collection (перевод коллекция)- аргумент (любое слово). */
{
    Console.WriteLine("Введите целое число начала диапозона требуемого массива.");

    int a = Convert.ToInt32(Console.ReadLine());

    Console.WriteLine("Введите целое число конца диапозона требуемого массива.");

    int b = Convert.ToInt32(Console.ReadLine());

    if (a > b) (a, b) = (b, a); /* Если число начала диапозона больше числа
                                 окончания диапозона, то поменяем их местами.*/

    b = b + 1; /* Увеличиваем переменную конца диапозона случайных чисел на (1) так как, далее,
                  Random().Next(a,b) не включает последнюю цифру в диапозон.*/

    for (int index = 0; index < collection.Length; index++) /* Вводим переменную (index)- 
    это позиция первого элемента массива. До тех пор, пока позиция элемента массива меньше 
    длины массива, увеличиваем значение позиции элемента на (1) при каждой итерации. */

        collection[index] = new Random().Next(a, b); /* Заполняем наш массив случайными числами
                                                        от (а) до (b), не включая (b).*/
}

// Метод 2-печать массива на экран.
void PrintArray(int[] col)  /* PrintArray-печать массива. col- это какая-то другая переменная. */
{
    for (int index = 0; index < col.Length; index++) /* Вводим переменную (index)- это позиция первого
     элемента массива. До тех пор, пока позиция элемента массива меньше длины массива,
     увеличиваем значение позиции элемента на (1) при каждой итерации. */
    {
        if (index == 0) Console.Write($"["); /* Если индекс элемента раве нулю, 
        т.е. (первый элемент массива), то на экран, сначала, выводим левую квадратную скобку.*/

        Console.Write($"{col[index]} "); /* Выводим на экран, в одну строку, через пробел,
                                            все элементы массива.*/

        if (index < col.Length - 1) Console.Write($", "); /* Если индекс элемента меньше длины 
        массива минус один, т.е. (последний элемент массива), то ставим запятую.*/

        if (index == col.Length - 1) Console.Write($"]"); /* Если индекс элемента равен длине 
        массива минус один, т.е. (последний элемент массива), то ставим правую квадратную скобку.*/
    }
}
try /* Блок обработки исключений.*/
{
    Console.WriteLine("Введите число количества элементов требуемого массива.");
    Console.WriteLine("Число должно быть целым и положительным.");
    int number = Convert.ToInt32(Console.ReadLine());

    int[] array = new int[number];/*Создаем массив и укажем, что в нем (number) элементов.*/

    if (number == 0)
    {
        Console.WriteLine("В массиве нет элементов"); /* Если количество элементов массива
        равно нулю, то выводим на экран "В массиве нет элементов".*/
        return; /* Возвращаемся на исходную точку.*/
    }

    FillArray(array); /*Вызываем метод заполнения массива,который мы описали выше 
                    с наименованием созданного массива (array). */

    PrintArray(array); /*Вызываем метод вывода на печать, который мы описали выше 
                     с наименованием созданного массива (array) */
}
catch /* Окончание блока обработки исключений.*/
{
    Console.WriteLine("Некорректный ввод данных.");
}
